@model List<YimYimDental.Models.BillingItem>
@{
    ViewData["Title"] = "คำนวณค่าบริการ";
    Layout = "~/Views/Shared/_LayoutSidebar.cshtml";
}

<style>
    .select2-container--default .select2-selection--single {
        height: calc(2.25rem + 2px);
        padding: 0.375rem 0.75rem;
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
        font-size: 1rem;
        line-height: 1.5;
    }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 1.5;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            height: 100%;
            right: 10px;
        }

    .select2-container {
        width: 100% !important;
    }

    .select2-container--default .select2-results__option[aria-disabled=true] {
        color: #999;
        background-color: #f8f9fa;
    }
</style>



<div class="container-fluid">
    <h4 class="text-primary mb-4">@ViewData["Title"]</h4>

    <div class="bg-white p-4 rounded shadow-sm border">
        <div class="row g-3">
            <div class="col-md-5">
                <label class="form-label">บริการ/อุปกรณ์</label>
                <select id="serviceSelect" class="form-select">
                    <option value="">-- เลือกบริการหรืออุปกรณ์ --</option>
                    <optgroup label="บริการ">
                        @foreach (var service in (IEnumerable<YimYimDental.Models.Service>)ViewBag.Services)
                        {
                            <option value="@service.Id" data-price="@service.Price">@service.Name - @service.Price.ToString("N2") บาท</option>
                        }
                    </optgroup>
                    <optgroup label="อุปกรณ์">
                        @foreach (var equipment in (IEnumerable<YimYimDental.Models.Equipment>)ViewBag.Equipments)
                        {
                            <option value="@equipment.Id" data-price="@equipment.Price">@equipment.Name - @equipment.Price.ToString("N2") บาท</option>
                        }
                    </optgroup>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">จำนวน</label>
                <input type="number" id="quantity" class="form-control" min="1" value="1">
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <button type="button" class="btn btn-primary w-100" onclick="addService()">
                    <i class="fa-solid fa-plus me-2"></i> เพิ่มบริการ
                </button>
            </div>
        </div>

        <!-- ตารางรายการบริการ -->
        <table class="table table-bordered mt-4" id="serviceTable">
            <thead class="table-light">
                <tr>
                    <th>ชื่อบริการ</th>
                    <th width="120">จำนวน</th>
                    <th width="150">ราคาต่อหน่วย</th>
                    <th width="150">รวม</th>
                    <th width="50"></th>
                </tr>
            </thead>
            <tbody>
                <!-- แถวบริการจะถูกเพิ่มที่นี่ผ่าน JavaScript -->
            </tbody>
            <tfoot>
                <tr>
                    <th colspan="3" class="text-end">รวมทั้งหมด</th>
                    <th id="totalAmount" class="text-danger">0.00</th>
                    <th></th>
                </tr>
            </tfoot>
        </table>

        <div class="text-end">
            <button type="button" class="btn btn-success" onclick="printReceipt()">
                <i class="fa-solid fa-print me-2"></i> พิมพ์ใบเสร็จ
            </button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function addService() {
            const select = document.getElementById('serviceSelect');
            const selectedOption = select.options[select.selectedIndex];
            const quantity = parseInt(document.getElementById('quantity').value);

            if (!selectedOption.value || quantity < 1) {
                 Swal.fire({
                    icon: 'warning',
                    title: 'เกิดข้อผิดพลาด',
                    text: 'กรุณาเลือกบริการและระบุจำนวนให้ถูกต้อง',
                    confirmButtonText: 'ตกลง'
                 });
                return;
            }

            // ตรวจสอบบริการซ้ำ
            const existingRow = document.querySelector(`input[name="ItemId"][value="${selectedOption.value}"]`);
            if (existingRow) {
                const qtyInput = existingRow.closest('tr').querySelector('input[name="Quantity"]');
                qtyInput.value = parseInt(qtyInput.value) + quantity;
                updateTotal();
                updateServiceOptions();
                return;
            }

            // สร้างแถวใหม่
            const rowIndex = document.querySelectorAll('#serviceTable tbody tr').length;
            const newRow = `
                <tr>
                    <td>${selectedOption.text.split(' - ')[0]}
                        <input type="hidden" name="BillingItem[${rowIndex}].ItemId" value="${selectedOption.value}">
                        <input type="hidden" name="BillingItem[${rowIndex}].Price" value="${selectedOption.dataset.price}">
                    </td>
                    <td>
                        <input type="number" name="BillingItem[${rowIndex}].Quantity"
                               class="form-control qty-input" min="1" value="${quantity}" onchange="updateTotal()">
                    </td>
                    <td class="text-end">${parseFloat(selectedOption.dataset.price).toFixed(2)}</td>
                    <td class="text-end item-total">${(selectedOption.dataset.price * quantity).toFixed(2)}</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeService(this)">
                            <i class="fa-solid fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `;

            document.querySelector('#serviceTable tbody').insertAdjacentHTML('beforeend', newRow);
            updateTotal();
            updateServiceOptions();

            // รีเซ็ตค่า dropdown และจำนวน
            $('#serviceSelect').val(null).trigger('change');
            document.getElementById('quantity').value = 1;
        }

        function removeService(button) {
            button.closest('tr').remove();
            updateTotal();
            updateServiceOptions();

            // อัพเดตชื่อของ input fields เพื่อให้ index ต่อเนื่อง
            document.querySelectorAll('#serviceTable tbody tr').forEach((row, index) => {
                row.querySelector('input[name^="BillingItem"]').name = `BillingItem[${index}].ItemId`;
                row.querySelector('input[name^="BillingItem"][name$="Price"]').name = `BillingItem[${index}].Price`;
                row.querySelector('input[name^="BillingItem"][name$="Quantity"]').name = `BillingItem[${index}].Quantity`;
            });
        }

        function updateTotal() {
            let total = 0;
            document.querySelectorAll('#serviceTable tbody tr').forEach(row => {
                const price = parseFloat(row.querySelector('input[name$="Price"]').value);
                const quantity = parseInt(row.querySelector('input[name$="Quantity"]').value);
                const itemTotal = price * quantity;
                row.querySelector('.item-total').textContent = itemTotal.toFixed(2);
                total += itemTotal;
            });
            document.getElementById('totalAmount').textContent = total.toFixed(2);
        }

        function updateServiceOptions() {
            // เก็บรหัสบริการทั้งหมดในตาราง
            const serviceIds = Array.from(document.querySelectorAll('input[name$="ItemId"]'))
                .map(input => input.value);

            // อัพเดตสถานะ disabled ใน dropdown
            const select = document.getElementById('serviceSelect');
            Array.from(select.options).forEach(option => {
                if (option.value !== "") {
                    option.disabled = serviceIds.includes(option.value);
                }
            });

            // อัพเดต Select2 เพื่อแสดงผลถูกต้อง
            $('#serviceSelect').trigger('change');
        }

        $(document).ready(function() {
            $('#serviceSelect').select2({
                placeholder: "-- เลือกบริการหรืออุปกรณ์ --",
                allowClear: true
            });
        });

        function printReceipt() {
            const serviceRows = document.querySelectorAll('#serviceTable tbody tr');
            if (serviceRows.length === 0) {
                 Swal.fire({
                                    icon: 'error',
                                    title: 'ไม่มีบริการหรืออุปกรณ์',
                                    text: 'โปรดเพิ่มบริการหรืออุปกรณ์ก่อนพิมพ์',
                                    confirmButtonText: 'ตกลง'
                                });
                return;
            }

            const { jsPDF } = window.jspdf;
            const doc = new jsPDF({
                orientation: "p",
                unit: "mm",
                format: "a4"
            });

            // ตั้งค่าฟอนต์
            doc.setFont("THSarabunNew", "normal");
            doc.setFontSize(16);

            // Header
            doc.text("ใบเสร็จรับเงิน", 105, 20, { align: "center" });
            doc.setFontSize(12);
            doc.text("YimYim Dental Clinic", 105, 30, { align: "center" });
            doc.text("ที่อยู่: 123 ถนนสุขภาพแข็งแรง, เมืองสุข, ประเทศไทย", 105, 36, { align: "center" });
            doc.text("โทร: 012-345-6789", 105, 42, { align: "center" });

            // วันที่ออกใบเสร็จ (ชิดขวา)
            const today = new Date();
            const dateStr = today.toLocaleDateString('th-TH', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            doc.text("วันที่ออกใบเสร็จ: " + dateStr, doc.internal.pageSize.getWidth() - 10, 42, { align: "right" });

            // เส้นคั่น
            doc.line(10, 48, 200, 48);

            // สร้างตารางรายการบริการด้วย AutoTable
            const headers = [['ลำดับ', 'ชื่อบริการ', 'จำนวน', 'ราคาต่อหน่วย', 'รวม']];
            const tableData = [];
            serviceRows.forEach((row, index) => {
                const serviceName = row.cells[0].innerText.split("\n")[0];
                const quantity = row.querySelector('input[name$="Quantity"]').value;
                const unitPrice = row.cells[2].innerText;
                const itemTotal = row.cells[3].innerText;
                tableData.push([index + 1, serviceName, quantity, unitPrice, itemTotal]);
            });

            doc.autoTable({
                head: headers,
                body: tableData,
                startY: 50,
                theme: "grid",
                headStyles: { fillColor: [41, 128, 185], halign: "center" },
                bodyStyles: { halign: "center" },
                styles: { font: "THSarabunNew", fontSize: 12 }
            });

            // แสดงยอดรวม (ชิดขวา)
            const totalY = doc.autoTable.previous.finalY + 10;
            const totalAmount = document.getElementById("totalAmount").textContent;
            doc.setFontSize(12);
            doc.text("รวมทั้งหมด: " + totalAmount + " บาท", doc.internal.pageSize.getWidth() - 10, totalY, { align: "right" });

            // Footer
            doc.setFontSize(12);
            doc.text("ขอบคุณที่ใช้บริการ", 105, 280, { align: "center" });

            // แสดง PDF ในแท็บใหม่
            doc.output('dataurlnewwindow');
        }
    </script>
}
