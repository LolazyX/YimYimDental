@model YimYimDental.Models.Customer

@{
    ViewData["Title"] = "รายละเอียดลูกค้า";
    Layout = "~/Views/Shared/_LayoutSidebar.cshtml";
}

<style>
    .select2-container--default .select2-selection--single {
        height: calc(2.25rem + 2px);
        padding: 0.375rem 0.75rem;
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
        font-size: 1rem;
        line-height: 1.5;
    }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 1.5;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            height: 100%;
            right: 10px;
        }

    .select2-container {
        width: 100% !important;
    }

    .select2-container--default .select2-results__option[aria-disabled=true] {
        color: #999;
        background-color: #f8f9fa;
    }
</style>

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 class="text-primary">รายละเอียดลูกค้า</h4>
        @if (ViewBag.Role == "Dentist")
        {
            <a asp-controller="Queue" asp-action="Index" class="btn btn-info">
                <i class="fa-solid fa-eye me-2"></i> ดูคิวการรักษา
            </a>
        }
        @if (ViewBag.Role == "Officer" || ViewBag.Role == "Admin")
        {
            <a asp-controller="Customer" asp-action="Index" class="btn btn-success">
                <i class="fa-solid fa-eye me-2"></i> ดูรายชื่อลูกค้า
            </a>
        }
    </div>

    <div class="bg-white p-4 rounded shadow-sm border">
        <!-- ข้อมูลส่วนตัว -->
        <h5 class="mb-3 border-bottom pb-2 text-secondary">ข้อมูลส่วนตัว</h5>
        <div class="row g-3">
            <div class="col-md-8">
                <label class="form-label">ชื่อ-นามสกุล</label>
                <input type="text" class="form-control" value="@Model.Prefix @Model.FullName" disabled>
            </div>
            <div class="col-md-4">
                <label class="form-label">HN (6 หลัก)</label>
                <input type="text" class="form-control" value="@Model.HN" disabled>
            </div>
            <div class="col-md-6">
                <label class="form-label">เลขบัตรประชาชน</label>
                <input type="text" class="form-control" value="@Model.NationalId" disabled>
            </div>
            <div class="col-md-3">
                <label class="form-label">วันเกิด</label>
                <input type="date" class="form-control" value="@(Model.DateOfBirth.HasValue ? Model.DateOfBirth.Value.ToString("yyyy-MM-dd") : "")" disabled>
            </div>
            <div class="col-md-3">
                <label class="form-label">อายุ (ปี)</label>
                <input type="text" class="form-control" id="age" value="@ViewBag.Age" disabled>
            </div>
            <div class="col-md-4">
                <label class="form-label">เพศ</label>
                <input type="text" class="form-control" value="@Model.Gender" disabled>
            </div>
        </div>

        <!-- ข้อมูลติดต่อ -->
        <h5 class="mt-4 mb-3 border-bottom pb-2 text-secondary">ข้อมูลติดต่อ</h5>
        <div class="row g-3">
            <div class="col-md-4">
                <label class="form-label">เบอร์มือถือ</label>
                <input type="tel" class="form-control" value="@Model.Phone" disabled>
            </div>
            <div class="col-md-4">
                <label class="form-label">อีเมล (ถ้ามี)</label>
                <input type="email" class="form-control" value="@Model.Email" disabled>
            </div>
            <div class="col-md-4">
                <label class="form-label">ที่อยู่</label>
                <textarea class="form-control" rows="1" disabled>@Model.Address</textarea>
            </div>
        </div>

        <!-- ข้อมูลสุขภาพ -->
        <h5 class="mt-4 mb-3 border-bottom pb-2 text-secondary">ข้อมูลสุขภาพ</h5>
        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">โรคประจำตัว</label>
                <textarea class="form-control" rows="2" disabled>@Model.ChronicDiseases</textarea>
            </div>
            <div class="col-md-6">
                <label class="form-label">ประวัติการแพ้ยา/อาหาร</label>
                <textarea class="form-control" rows="2" disabled>@Model.Allergies</textarea>
            </div>
        </div>

        <!-- Treatment History Section -->
        <h5 class="mt-4 mb-3 border-bottom pb-2 text-secondary">ประวัติการรักษา</h5>
        <div class="row g-4">
            <div class="col-md-3">
                <div class="list-group list-group-flush overflow-auto border rounded" style="max-height:185px;">
                    @if (Model.TreatmentHistories == null || !Model.TreatmentHistories.Any())
                    {
                        <div class="text-center text-muted py-5">
                            ไม่มีรายการ
                        </div>
                    }
                    else
                    {
                        var histories = Model.TreatmentHistories.OrderByDescending(h => h.TreatmentDate).ToList();
                        var firstId = histories.First().Id;
                        foreach (var h in histories)
                        {
                            <button class="list-group-item list-group-item-action d-flex align-items-center @((h.Id == firstId) ? "active" : "")"
                                    id="list-hist-@h.Id-list"
                                    data-bs-toggle="list"
                                    data-bs-target="#hist-@h.Id"
                                    role="tab"
                                    aria-controls="hist-@h.Id">
                                <span>@h.TreatmentDate.ToString("dd/MM/yyyy HH:mm")</span>
                            </button>
                        }
                    }
                </div>
            </div>

            <div class="col-md-9">
                @if (Model.TreatmentHistories == null || !Model.TreatmentHistories.Any())
                {
                    <div class="alert alert-info">
                        ยังไม่มีประวัติการรักษา
                    </div>
                }
                else
                {
                    <div class="tab-content">
                        @{
                            var histories = Model.TreatmentHistories.OrderByDescending(h => h.TreatmentDate).ToList();
                            var firstId = histories.First().Id;
                            foreach (var h in histories)
                            {
                                <div class="tab-pane fade mb-3 @((h.Id == firstId) ? "show active" : "")"
                                     id="hist-@h.Id"
                                     role="tabpanel"
                                     aria-labelledby="list-hist-@h.Id-list">
                                    <div class="card border rounded">
                                        <div class="card-body">
                                            <div class="d-flex justify-content-between align-items-center mb-3">
                                                <h5 class="card-title text-primary mb-0">
                                                    <i class="fa-regular fa-calendar-days me-2"></i>
                                                    @h.TreatmentDate.ToString("dd MMMM yyyy เวลา HH:mm นาฬิกา", new System.Globalization.CultureInfo("th-TH"))
                                                </h5>
                                                <div>
                                                    <button class="btn btn-sm btn-warning me-1"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#editTreatmentModal"
                                                            onclick="fillEditTreatmentModal({
                                                                        id: '@h.Id',
                                                                        treatmentDate: '@h.TreatmentDate.ToString("yyyy-MM-ddTHH:mm")',
                                                                        treatmentDetails: '@h.TreatmentDetails',
                                                                        treatmentRights: '@h.TreatmentRights',
                                                                        dentistName: '@h.DentistName'
                                                                    })">
                                                        <i class="fa-solid fa-pen-to-square me-1"></i> แก้ไข
                                                    </button>
                                                    <button class="btn btn-sm btn-danger"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#deleteHistoryModal"
                                                            data-id="@h.Id"
                                                            data-date="@h.TreatmentDate.ToString("dd MMMM yyyy เวลา HH:mm นาฬิกา", new System.Globalization.CultureInfo("th-TH"))">
                                                        <i class="fa-solid fa-trash me-1"></i> ลบ
                                                    </button>
                                                    @if (ViewBag.Role == "Officer")
                                                    {
                                                        <button class="btn btn-sm btn-primary ms-1" onclick="printReceipt('@h.Id')">
                                                            <i class="fa-solid fa-print me-1"></i> พิมพ์ใบเสร็จ
                                                        </button>
                                                    }
                                                </div>
                                            </div>
                                            <p class="mb-2"><strong>ผลการตรวจ:</strong> @h.TreatmentDetails</p>
                                            <p class="mb-2"><strong>สิทธิ์การรักษา:</strong> @h.TreatmentRights</p>
                                            <p class="mb-2"><strong>แพทย์ผู้ตรวจ:</strong> @h.DentistName</p>
                                            @if (h.Billings != null && h.Billings.Any())
                                            {
                                                  <p class="mb-2">
                                                    <!-- เพิ่ม ID เพื่ออ้างอิงถึงสถานะการชำระเงิน -->
                                                    <strong id="paymentStatus-@h.Id">
                                                        รายการเรียกเก็บเงิน (@(h.IsPaid ? "ชำระแล้ว" : "ยังไม่ชำระ"))
                                                    </strong> :
                                                </p>
                                                <ul>
                                                    @foreach (var billing in h.Billings)
                                                    {
                                                        // แปลง ViewBag.Services และ ViewBag.Equipments เป็นประเภทที่ชัดเจน
                                                        var services = ViewBag.Services as IEnumerable<YimYimDental.Models.Service> ?? new List<YimYimDental.Models.Service>();
                                                        var equipments = ViewBag.Equipments as IEnumerable<YimYimDental.Models.Equipment> ?? new List<YimYimDental.Models.Equipment>();

                                                        // ดึงชื่อบริการหรืออุปกรณ์
                                                        var itemName = billing.ItemType == "Service"
                                                        ? services.FirstOrDefault(s => s.Id == billing.ItemId)?.Name
                                                        : equipments.FirstOrDefault(e => e.Id == billing.ItemId)?.Name;

                                                        <li>@itemName : @billing.Quantity x @billing.Price.ToString("N2") = @((billing.Quantity * billing.Price).ToString("N2")) บาท</li>
                                                    }
                                                </ul>
                                            }
                                            @if (ViewBag.Role == "Officer")
                                            {
                                                <div class="mt-2">
                                                    <!-- แก้ไข onchange ส่ง Treatment ID และสถานะ checked -->
                                                    <label class="form-check-label">
                                                        <input type="checkbox"
                                                               class="form-check-input"
                                                               onchange="updatePaymentStatus('@h.Id', this.checked)"
                                                        @(h.IsPaid ? "checked" : "")>
                                                        ชำระเงินแล้ว
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                }
            </div>
        </div>

        <!-- Treatment Recording Section for Dentist -->
        @if (ViewBag.Role == "Dentist")
        {
            <h5 class="mt-4 mb-3 border-bottom pb-2 text-secondary">บันทึกการรักษา</h5>
            <form asp-controller="Customer" asp-action="SaveHistory" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="queue" value="@ViewBag.Queue" />
                <input type="hidden" name="DentistName" value="@ViewBag.DentistName" />

                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label">ผลการตรวจ <span class="text-danger">*</span></label>
                        <textarea name="TreatmentDetails" class="form-control" rows="2" required></textarea>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">สิทธิ์การรักษา <span class="text-danger">*</span></label>
                        <select name="TreatmentRight" class="form-select" required>
                            <option value="">-- เลือกสิทธิ์การรักษา --</option>
                            <option value="ไม่มี">ไม่มี</option>
                            <option value="สิทธิบัตรทอง">สิทธิบัตรทอง</option>
                            <option value="สิทธิประกันสังคม">สิทธิประกันสังคม</option>
                            <option value="สิทธิข้าราชการ">สิทธิข้าราชการ</option>
                        </select>
                    </div>
                    <!-- Service/Equipment Selection -->
                    <div class="col-md-12">
                        <h6>บริการหรืออุปกรณ์ที่ใช้</h6>
                        <div class="row g-3">
                            <div class="col-md-5">
                                <select id="serviceSelect" class="form-select">
                                    <option value="">-- เลือกบริการหรืออุปกรณ์ --</option>
                                    <optgroup label="บริการ">
                                        @foreach (var service in ViewBag.Services)
                                        {
                                            <option value="@service.Id" data-type="Service" data-price="@service.Price" data-name="@service.Name">@service.Name - @service.Price.ToString("N2") บาท</option>
                                        }
                                    </optgroup>
                                    <optgroup label="อุปกรณ์">
                                        @foreach (var equipment in ViewBag.Equipments)
                                        {
                                            <option value="@equipment.Id" data-type="Equipment" data-price="@equipment.Price" data-name="@equipment.Name">@equipment.Name - @equipment.Price.ToString("N2") บาท</option>
                                        }
                                    </optgroup>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <input type="number" id="quantity" class="form-control" min="1" value="1" placeholder="จำนวน">
                            </div>
                            <div class="col-md-4">
                                <button type="button" class="btn btn-primary" onclick="addItem()">เพิ่ม</button>
                            </div>
                        </div>
                        <table class="table table-bordered mt-3" id="serviceTable">
                            <thead>
                                <tr>
                                    <th>ชื่อ</th>
                                    <th>ประเภท</th>
                                    <th>จำนวน</th>
                                    <th>ราคาต่อหน่วย</th>
                                    <th>รวม</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        <div class="text-end mt-2">
                            <strong>ยอดรวมทั้งหมด: <span id="totalAmount">0.00</span> บาท</strong>
                        </div>
                    </div>
                </div>

                <div class="text-end mt-4">
                    <button type="submit" class="btn btn-success px-4 py-2">
                        <i class="fa-solid fa-floppy-disk me-2"></i> บันทึก
                    </button>
                </div>
            </form>
        }

        <!-- Action Buttons -->
        @if (ViewBag.Role != "Dentist")
        {
            <div class="col-12 text-end mt-4">
                <a asp-controller="Queue" asp-action="Create" asp-route-customerHN="@Model.HN" class="btn btn-info px-4 py-2 me-2">
                    <i class="fa-solid fa-plus me-2"></i> เพิ่มคิว
                </a>
                <a href="#"
                   data-bs-toggle="modal"
                   data-bs-target="#editCustomerModal"
                   data-id="@Model.Id"
                   data-prefix="@Model.Prefix"
                   data-fullname="@Model.FullName"
                   data-hn="@Model.HN"
                   data-nationalid="@Model.NationalId"
                   data-dob="@(Model.DateOfBirth.HasValue ? Model.DateOfBirth.Value.ToString("yyyy-MM-dd") : "")"
                   data-gender="@Model.Gender"
                   data-phone="@Model.Phone"
                   data-email="@Model.Email"
                   data-address="@Model.Address"
                   data-chronicdiseases="@Model.ChronicDiseases"
                   data-allergies="@Model.Allergies"
                   class="btn btn-warning px-4 py-2">
                    <i class="fa-solid fa-edit me-2"></i> แก้ไขข้อมูล
                </a>
                <button type="button" class="btn btn-danger px-4 py-2 ms-2"
                        data-bs-toggle="modal"
                        data-bs-target="#deleteCustomerModal"
                        data-id="@Model.Id"
                        data-name="@Model.FullName">
                    <i class="fa-solid fa-trash me-2"></i> ลบข้อมูล
                </button>
            </div>
        }
    </div>
</div>

<!-- Edit Customer Modal -->
<div class="modal fade" id="editCustomerModal" tabindex="-1" aria-labelledby="editCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="editCustomerModalLabel">แก้ไขข้อมูลลูกค้า</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="ปิด"></button>
            </div>
            <form id="editCustomerForm" method="post" asp-controller="Customer" asp-action="Edit">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="editCustomerId" name="Id" />
                    <div class="mb-3">
                        <label for="editCustomerPrefix" class="form-label">คำนำหน้า</label>
                        <select class="form-select" id="editCustomerPrefix" name="Prefix" required>
                            <option value="">-- เลือกคำนำหน้า --</option>
                            <option value="นาย">นาย</option>
                            <option value="นางสาว">นางสาว</option>
                            <option value="นาง">นาง</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerFullName" class="form-label">ชื่อ-นามสกุล</label>
                        <input type="text" class="form-control" id="editCustomerFullName" name="FullName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerHN" class="form-label">HN (6 หลัก)</label>
                        <input type="text" class="form-control" id="editCustomerHN" name="HN" maxlength="6" readonly required>
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerNationalId" class="form-label">เลขบัตรประชาชน</label>
                        <input type="text" class="form-control" id="editCustomerNationalId" name="NationalId" maxlength="13" required>
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerDob" class="form-label">วันเกิด</label>
                        <input type="date" class="form-control" id="editCustomerDob" name="DateOfBirth" required>
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerGender" class="form-label">เพศ</label>
                        <select class="form-select" id="editCustomerGender" name="Gender" required>
                            <option value="">-- เลือกเพศ --</option>
                            <option value="ชาย">ชาย</option>
                            <option value="หญิง">หญิง</option>
                            <option value="อื่น ๆ">อื่น ๆ</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerPhone" class="form-label">เบอร์โทร</label>
                        <input type="tel" class="form-control" id="editCustomerPhone" name="Phone" required>
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerEmail" class="form-label">อีเมล (ถ้ามี)</label>
                        <input type="email" class="form-control" id="editCustomerEmail" name="Email">
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerAddress" class="form-label">ที่อยู่</label>
                        <textarea class="form-control" id="editCustomerAddress" name="Address" rows="2" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerChronicDiseases" class="form-label">โรคประจำตัว</label>
                        <textarea class="form-control" id="editCustomerChronicDiseases" name="ChronicDiseases" rows="2"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="editCustomerAllergies" class="form-label">ประวัติการแพ้ยา/อาหาร</label>
                        <textarea class="form-control" id="editCustomerAllergies" name="Allergies" rows="2"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-warning text-dark">บันทึกการแก้ไข</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Customer Modal -->
<div class="modal fade" id="deleteCustomerModal" tabindex="-1" aria-labelledby="deleteCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteCustomerModalLabel">ยืนยันการลบ</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="ปิด"></button>
            </div>
            <div class="modal-body">
                ต้องการลบลูกค้า <strong id="customerName"></strong> หรือไม่?
            </div>
            <div class="modal-footer">
                <form id="deleteCustomerForm" method="post" asp-controller="Customer" asp-action="Delete">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="deleteCustomerId" name="id" />
                    <button type="submit" class="btn btn-danger">ลบข้อมูล</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Treatment Modal -->
<div class="modal fade" id="editTreatmentModal" tabindex="-1" aria-labelledby="editTreatmentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="editTreatmentModalLabel">แก้ไขประวัติการรักษา</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="ปิด"></button>
            </div>
            <form method="post" asp-controller="Customer" asp-action="EditTreatmen">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="editTreatmentId" name="Id" />
                    <div class="mb-3">
                        <label for="editTreatmentDate" class="form-label">วันที่รักษา</label>
                        <input type="datetime-local" class="form-control" id="editTreatmentDate" name="TreatmentDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="editTreatmentDetails" class="form-label">ผลการตรวจ</label>
                        <textarea class="form-control" id="editTreatmentDetails" name="TreatmentDetails" rows="2" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="editTreatmentRights" class="form-label">สิทธิ์การรักษา</label>
                        <select id="editTreatmentRights" name="TreatmentRights" class="form-select" required>
                            <option value="">-- เลือกสิทธิ์การรักษา --</option>
                            <option value="ไม่มี">ไม่มี</option>
                            <option value="สิทธิบัตรทอง">สิทธิบัตรทอง</option>
                            <option value="สิทธิประกันสังคม">สิทธิประกันสังคม</option>
                            <option value="สิทธิข้าราชการ">สิทธิข้าราชการ</option>
                        </select>
                    </div>
                    <input type="text" class="form-control" id="editDentistName" name="DentistName" hidden>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-warning text-dark">บันทึกการแก้ไข</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Treatment History Modal -->
<div class="modal fade" id="deleteHistoryModal" tabindex="-1" aria-labelledby="deleteHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteHistoryModalLabel">ยืนยันการลบ</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="ปิด"></button>
            </div>
            <div class="modal-body">
                ต้องการลบประวัติการรักษาเมื่อ <strong id="historyDateText"></strong> หรือไม่?
            </div>
            <div class="modal-footer">
                <form id="deleteHistoryForm" method="post" asp-controller="Customer" asp-action="DeleteHistory">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="deleteHistoryId" name="id" />
                    <button type="submit" class="btn btn-danger">ลบข้อมูล</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Initialize Select2
        $(document).ready(function () {
            $('#serviceSelect').select2({
                placeholder: "-- เลือกบริการหรืออุปกรณ์ --",
                allowClear: true
            });
        });

        // Edit Customer Modal Setup
        var editCustomerModal = document.getElementById('editCustomerModal');
        editCustomerModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var id = button.getAttribute('data-id');
            var prefix = button.getAttribute('data-prefix');
            var fullName = button.getAttribute('data-fullname');
            var hn = button.getAttribute('data-hn');
            var nationalId = button.getAttribute('data-nationalid');
            var dob = button.getAttribute('data-dob');
            var gender = button.getAttribute('data-gender');
            var phone = button.getAttribute('data-phone');
            var email = button.getAttribute('data-email');
            var address = button.getAttribute('data-address');
            var chronicDiseases = button.getAttribute('data-chronicdiseases');
            var allergies = button.getAttribute('data-allergies');

            document.getElementById('editCustomerId').value = id;
            document.getElementById('editCustomerPrefix').value = prefix;
            document.getElementById('editCustomerFullName').value = fullName;
            document.getElementById('editCustomerHN').value = hn;
            document.getElementById('editCustomerNationalId').value = nationalId;
            document.getElementById('editCustomerDob').value = dob;
            document.getElementById('editCustomerGender').value = gender;
            document.getElementById('editCustomerPhone').value = phone;
            document.getElementById('editCustomerEmail').value = email;
            document.getElementById('editCustomerAddress').value = address;
            document.getElementById('editCustomerChronicDiseases').value = chronicDiseases;
            document.getElementById('editCustomerAllergies').value = allergies;
        });

        // Delete Customer Modal Setup
        var deleteCustomerModal = document.getElementById('deleteCustomerModal');
        deleteCustomerModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var customerId = button.getAttribute('data-id');
            var customerName = button.getAttribute('data-name');

            document.getElementById('customerName').textContent = customerName;
            document.getElementById('deleteCustomerId').value = customerId;
        });

        // Delete History Modal Setup
        var deleteHistoryModal = document.getElementById('deleteHistoryModal');
        deleteHistoryModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var historyId = button.getAttribute('data-id');
            var historyDate = button.getAttribute('data-date');

            document.getElementById('historyDateText').textContent = historyDate;
            document.getElementById('deleteHistoryId').value = historyId;
        });

        // Fill Edit Treatment Modal
        function fillEditTreatmentModal(history) {
            document.getElementById("editTreatmentId").value = history.id;
            document.getElementById("editTreatmentDate").value = history.treatmentDate.substring(0, 16);
            document.getElementById("editTreatmentDetails").value = history.treatmentDetails;
            document.getElementById("editTreatmentRights").value = history.treatmentRights;
            document.getElementById("editDentistName").value = history.dentistName;
        }

        // Add Service/Equipment Item
        let itemCounter = 0;
        function addItem() {
            const select = document.getElementById('serviceSelect');
            const selectedOption = select.options[select.selectedIndex];
            const quantityInput = document.getElementById('quantity');
            const quantity = parseInt(quantityInput.value);

            if (!selectedOption.value || quantity < 1) {
                Swal.fire({
                    icon: 'error',
                    title: 'ข้อมูลไม่ถูกต้อง',
                    text: 'กรุณาเลือกบริการหรืออุปกรณ์และระบุจำนวนที่มากกว่า 0',
                    confirmButtonText: 'ตกลง'
                });
                return;
            }

            const itemId = parseInt(selectedOption.value);
            const itemType = selectedOption.getAttribute('data-type');
            const itemName = selectedOption.getAttribute('data-name');
            const price = parseFloat(selectedOption.getAttribute('data-price'));
            const total = price * quantity;

            if (isNaN(itemId) || !itemType || !itemName || isNaN(price)) {
                Swal.fire({
                    icon: 'error',
                    title: 'ข้อมูลไม่ถูกต้อง',
                    text: 'ข้อมูลบริการหรืออุปกรณ์ไม่ถูกต้อง',
                    confirmButtonText: 'ตกลง'
                });
                return;
            }

            // ตรวจสอบบริการซ้ำ
            const existingRow = document.querySelector(`input[name$="ItemId"][value="${itemId}"]`);
            if (existingRow) {
                const qtyInput = existingRow.closest('tr').querySelector('input[name$="Quantity"]');
                qtyInput.value = parseInt(qtyInput.value) + quantity;
                updateTotal();
                updateServiceOptions();
                return;
            }

            const index = itemCounter++;
            const row = `
                <tr>
                    <td>${itemName}
                        <input type="hidden" name="BillingItems[${index}].ItemId" value="${itemId}">
                        <input type="hidden" name="BillingItems[${index}].Price" value="${price}">
                        <input type="hidden" name="BillingItems[${index}].ItemType" value="${itemType}">
                    </td>
                    <td>${itemType}</td>
                    <td><input type="number" name="BillingItems[${index}].Quantity" class="form-control qty-input" min="1" value="${quantity}" onchange="updateTotal()"></td>
                    <td class="text-end">${price.toFixed(2)}</td>
                    <td class="text-end item-total">${total.toFixed(2)}</td>
                    <td><button type="button" class="btn btn-danger btn-sm" onclick="removeItem(this)">ลบ</button></td>
                </tr>
            `;

            document.querySelector('#serviceTable tbody').insertAdjacentHTML('beforeend', row);
            updateTotal();
            updateServiceOptions();
            select.value = '';
            quantityInput.value = '1';
            $('#serviceSelect').trigger('change');
        }

        function removeItem(button) {
            button.closest('tr').remove();
            updateTotal();
            updateServiceOptions();

            // อัปเดตชื่อ input fields เพื่อให้ index ต่อเนื่อง
            document.querySelectorAll('#serviceTable tbody tr').forEach((row, index) => {
                row.querySelector('input[name$="ItemId"]').name = `BillingItems[${index}].ItemId`;
                row.querySelector('input[name$="Price"]').name = `BillingItems[${index}].Price`;
                row.querySelector('input[name$="ItemType"]').name = `BillingItems[${index}].ItemType`;
                row.querySelector('input[name$="Quantity"]').name = `BillingItems[${index}].Quantity`;
            });
        }

        function updateTotal() {
            let total = 0;
            document.querySelectorAll('#serviceTable tbody tr').forEach(row => {
                const price = parseFloat(row.querySelector('input[name$="Price"]').value);
                const quantity = parseInt(row.querySelector('input[name$="Quantity"]').value);
                const itemTotal = price * quantity;
                row.querySelector('.item-total').textContent = itemTotal.toFixed(2);
                total += itemTotal;
            });
            document.getElementById('totalAmount').textContent = total.toFixed(2);
        }

        function updateServiceOptions() {
            const serviceIds = Array.from(document.querySelectorAll('input[name$="ItemId"]'))
                .map(input => input.value);
            const select = document.getElementById('serviceSelect');
            Array.from(select.options).forEach(option => {
                if (option.value !== "") {
                    option.disabled = serviceIds.includes(option.value);
                }
            });
            $('#serviceSelect').trigger('change');
        }

        // Print Receipt
               function printReceipt(treatmentId) {
            let serviceRows = [];
            if (treatmentId) {
                // ดึงจากประวัติการรักษา
                const historyPane = document.querySelector(`#hist-${treatmentId}`);
                if (!historyPane) {
                    Swal.fire({
                        icon: 'error',
                        title: 'ไม่พบประวัติ',
                        text: 'ไม่พบประวัติการรักษานี้',
                        confirmButtonText: 'ตกลง'
                    });
                    return;
                }
                serviceRows = historyPane.querySelectorAll('ul li');
            } else {
                // ดึงจาก serviceTable
                serviceRows = document.querySelectorAll('#serviceTable tbody tr');
            }

            if (serviceRows.length === 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'ไม่มีบริการหรืออุปกรณ์',
                    text: 'โปรดเพิ่มบริการหรืออุปกรณ์ก่อนพิมพ์',
                    confirmButtonText: 'ตกลง'
                });
                return;
            }

            const { jsPDF } = window.jspdf;
            const doc = new jsPDF({
                orientation: "p",
                unit: "mm",
                format: "a4"
            });

            // ตั้งค่าฟอนต์
            doc.setFont("THSarabunNew", "normal");
            doc.setFontSize(16);

            // Header
            doc.text("ใบเสร็จรับเงิน", 105, 20, { align: "center" });
            doc.setFontSize(12);
            doc.text("YimYim Dental Clinic", 105, 30, { align: "center" });
            doc.text("ที่อยู่: 123 ถนนสุขภาพแข็งแรง, เมืองสุข, ประเทศไทย", 105, 36, { align: "center" });
            doc.text("โทร: 012-345-6789", 105, 42, { align: "center" });

            // วันที่ออกใบเสร็จ
            const today = new Date();
            const dateStr = today.toLocaleDateString('th-TH', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            doc.text("วันที่ออกใบเสร็จ: " + dateStr, doc.internal.pageSize.getWidth() - 10, 42, { align: "right" });

            // เส้นคั่น
            doc.line(10, 48, 200, 48);

            // สร้างตาราง
            const headers = [['ลำดับ', 'ชื่อบริการ', 'จำนวน', 'ราคาต่อหน่วย', 'รวม']];
            const tableData = [];
            let totalAmount = 0;

            if (treatmentId) {
                // จากประวัติการรักษา
                serviceRows.forEach((item, index) => {
                    const text = item.innerText;
                    console.log('Processing item:', text); // ดีบักข้อความ
                    const match = text.match(/^(.+?)\s*:\s*(\d+)\s*x\s*([\d.]+)\s*=\s*([\d.]+)\s*บาท/);
                    if (match) {
                        const serviceName = match[1].trim();
                        const quantity = parseInt(match[2]);
                        const unitPrice = parseFloat(match[3]);
                        const itemTotal = parseFloat(match[4]);
                        tableData.push([index + 1, serviceName, quantity, unitPrice.toFixed(2), itemTotal.toFixed(2)]);
                        totalAmount += itemTotal;
                    } else {
                        console.error('Regex failed for item:', text); // ดีบักเมื่อ regex ล้มเหลว
                    }
                });
            } else {
                // จาก serviceTable
                serviceRows.forEach((row, index) => {
                    const serviceName = row.cells[0].innerText.split("\n")[0];
                    const quantity = parseInt(row.querySelector('input[name$="Quantity"]').value);
                    const unitPrice = parseFloat(row.cells[3].innerText);
                    const itemTotal = parseFloat(row.cells[4].innerText);
                    tableData.push([index + 1, serviceName, quantity, unitPrice.toFixed(2), itemTotal.toFixed(2)]);
                    totalAmount += itemTotal;
                });
            }

            if (tableData.length === 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'ไม่มีข้อมูลสำหรับพิมพ์',
                    text: 'ไม่พบข้อมูลบริการหรืออุปกรณ์ที่สามารถพิมพ์ได้',
                    confirmButtonText: 'ตกลง'
                });
                return;
            }

            doc.autoTable({
                head: headers,
                body: tableData,
                startY: 50,
                theme: "grid",
                headStyles: { fillColor: [41, 128, 185], halign: "center" },
                bodyStyles: { halign: "center" },
                styles: { font: "THSarabunNew", fontSize: 12 }
            });

            // แสดงยอดรวม
            const totalY = doc.autoTable.previous.finalY + 10;
            doc.setFontSize(12);
            doc.text("รวมทั้งหมด: " + totalAmount.toFixed(2) + " บาท", doc.internal.pageSize.getWidth() - 10, totalY, { align: "right" });

            // Footer
            doc.setFontSize(12);
            doc.text("ขอบคุณที่ใช้บริการ", 105, 280, { align: "center" });

            // แสดง PDF
            doc.output('dataurlnewwindow');
        }

        // Update Payment Status via AJAX
        function updatePaymentStatus(treatmentId, isPaid) {
            fetch('/Customer/UpdatePaymentStatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ treatmentId: treatmentId, isPaid: isPaid })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    // อัปเดตข้อความสถานะทันที
                    const statusElement = document.getElementById(`paymentStatus-${treatmentId}`);
                    statusElement.textContent = `รายการเรียกเก็บเงิน (${isPaid ? 'ชำระแล้ว' : 'ยังไม่ชำระ'})`;

                    // แสดงการแจ้งเตือนสำเร็จ
                    Swal.fire({
                        icon: 'success',
                        title: 'อัปเดตสถานะสำเร็จ!',
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'เกิดข้อผิดพลาด',
                        text: 'ไม่สามารถอัปเดตสถานะได้',
                        confirmButtonText: 'ตกลง'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'เกิดข้อผิดพลาด',
                    text: 'การเชื่อมต่อกับเซิร์ฟเวอร์มีปัญหา',
                    confirmButtonText: 'ตกลง'
                });
            });
        }
    </script>
}